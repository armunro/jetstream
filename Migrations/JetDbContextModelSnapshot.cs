// <auto-generated />
using System;
using Jetstream.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jetstream.Migrations
{
    [DbContext(typeof(JetDbContext))]
    partial class JetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jetstream.Data.Model.JetDbGateway", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Gateway");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0202ce66-2504-4211-ba35-bce32e527d41"),
                            Created = new DateTime(2022, 7, 20, 10, 14, 18, 108, DateTimeKind.Local).AddTicks(7977),
                            Description = "For testing and demo purposes",
                            Name = "Sample - Task Gateway"
                        });
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbGatewayProto", b =>
                {
                    b.Property<Guid>("GatewayId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProtoId")
                        .HasColumnType("uuid");

                    b.HasKey("GatewayId", "ProtoId");

                    b.HasIndex("ProtoId");

                    b.ToTable("GatewayProto");

                    b.HasData(
                        new
                        {
                            GatewayId = new Guid("0202ce66-2504-4211-ba35-bce32e527d41"),
                            ProtoId = new Guid("cf089500-9694-40e9-ae37-2f7de429ac88")
                        });
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbKind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kind");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbProto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf089500-9694-40e9-ae37-2f7de429ac88"),
                            Name = "Task Proto"
                        });
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbProtoRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Expression")
                        .HasColumnType("text");

                    b.Property<Guid>("ProtoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProtoId");

                    b.ToTable("ProtoRule");

                    b.HasData(
                        new
                        {
                            Id = new Guid("746bea9f-7af8-489b-b824-5b12206b8482"),
                            Expression = "",
                            ProtoId = new Guid("cf089500-9694-40e9-ae37-2f7de429ac88")
                        });
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("GatewayId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnitKind", b =>
                {
                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("KindId")
                        .HasColumnType("uuid");

                    b.HasKey("UnitId", "KindId");

                    b.HasIndex("KindId");

                    b.ToTable("UnitKind");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbGatewayProto", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbGateway", "Gateway")
                        .WithMany()
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jetstream.Data.Model.JetDbProto", "Proto")
                        .WithMany()
                        .HasForeignKey("ProtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");

                    b.Navigation("Proto");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbProtoRule", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbProto", "Proto")
                        .WithMany()
                        .HasForeignKey("ProtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proto");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnit", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbGateway", "Gateway")
                        .WithMany()
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnitKind", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbKind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jetstream.Data.Model.JetDbUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kind");

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
