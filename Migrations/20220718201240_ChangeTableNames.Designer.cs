// <auto-generated />
using System;
using Jetstream.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Jetstream.Migrations
{
    [DbContext(typeof(JetDbContext))]
    [Migration("20220718201240_ChangeTableNames")]
    partial class ChangeTableNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jetstream.Data.Model.JetDbGateway", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Gateway");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbKind", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kind");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("GatewayId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnitKind", b =>
                {
                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("KindId")
                        .HasColumnType("uuid");

                    b.HasKey("UnitId", "KindId");

                    b.HasIndex("KindId");

                    b.ToTable("UnitKind");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnit", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbGateway", "Gateway")
                        .WithMany()
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gateway");
                });

            modelBuilder.Entity("Jetstream.Data.Model.JetDbUnitKind", b =>
                {
                    b.HasOne("Jetstream.Data.Model.JetDbKind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jetstream.Data.Model.JetDbUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kind");

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
